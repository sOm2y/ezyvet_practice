{"version":3,"sources":["actions/actionTypes.js","containers/CartContainer.js","actions/actionCreators.js","components/Product.js","containers/ProductsContainer.js","App.js","serviceWorker.js","services/index.js","sagas/productSaga.js","sagas/index.js","reducers/cartReducer.js","reducers/productReducer.js","reducers/index.js","store.js","index.js"],"names":["GetProducts","GetProductsSuccess","mapDispatchToProps","removeProduct","product","type","payload","connect","state","props","carts","cartReducer","collapsed","onClose","useState","totalPrice","setTotalPrice","useEffect","calculateTotalPrice","map","item","quantity","price","reduce","prev","curr","width","title","placement","closable","visible","itemLayout","dataSource","footer","toLocaleString","undefined","style","currency","minimumFractionDigits","maximumFractionDigits","renderItem","cartItem","index","Item","key","actions","onClick","Meta","name","description","addProduct","background","padding","bordered","Header","Content","getProducts","products","productReducer","toggleCart","className","margin","minHeight","span","App","setCollapsed","Boolean","window","location","hostname","match","Promise","resolve","reject","axios","method","url","headers","then","res","status","catch","err","response","getProductsSaga","productSaga","message","loading","call","destroy","put","error","takeEvery","rootSaga","all","fork","initialState","action","addedProduct","find","filter","cartPersistConfig","storage","allReducers","combineReducers","persistReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","store","createStore","applyMiddleware","run","persistor","persistStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7a268f3.chunk.js","sourcesContent":["export const AddProduct = 'ADD_PRODUCT'\nexport const RemoveProduct = 'REMOVE_PRODUCT'\nexport const GetProducts = 'GET_PRODUCTS'\nexport const GetProductsSuccess = 'GET_PRODUCTS_SUCCESS'","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { List, Drawer, Button } from 'antd'\nimport { removeProduct } from '../actions/actionCreators'\n\nconst CartContainer = ({ ...props }) => {\n  const { collapsed, onClose, removeProduct, carts } = props\n\n  const [totalPrice, setTotalPrice] = useState(0)\n\n  useEffect(() => {\n    calculateTotalPrice()\n  }, [carts])\n\n  const calculateTotalPrice = () => {\n    let totalPrice = carts\n      .map(item => item.quantity * item.product.price)\n      .reduce((prev, curr) => prev + curr, 0)\n    setTotalPrice(totalPrice)\n  }\n\n  return (\n    <Drawer\n      width={720}\n      title=\"shopping cart\"\n      placement=\"right\"\n      closable={true}\n      onClose={onClose}\n      visible={collapsed}\n    >\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={carts}\n        footer={\n          <div>\n            <b>{`Total price : ${totalPrice.toLocaleString(undefined, {\n              style: 'currency',\n              currency: 'NZD',\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 2\n            })}`}</b>\n          </div>\n        }\n        renderItem={(cartItem, index) => (\n          <List.Item\n            key={index}\n            actions={[\n              <Button onClick={() => removeProduct(cartItem)}> Remove </Button>\n            ]}\n          >\n            <List.Item.Meta\n              title={cartItem.product.name}\n              description={(\n                cartItem.product.price * cartItem.quantity\n              ).toLocaleString(undefined, {\n                style: 'currency',\n                currency: 'NZD',\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 2\n              })}\n            />\n            <p> x {cartItem.quantity}</p>\n          </List.Item>\n        )}\n      />\n    </Drawer>\n  )\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    carts: state.cartReducer.carts\n  }\n}\n\nconst mapDispatchToProps = {\n  removeProduct\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CartContainer)\n","import { AddProduct, RemoveProduct, GetProducts } from './actionTypes'\n\nexport const addProduct = product => ({\n  type: AddProduct,\n  payload: product\n})\n\nexport const removeProduct = product => ({\n  type: RemoveProduct,\n  payload: product\n})\n\nexport const getProducts = () => ({\n  type: GetProducts\n})\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Card, Button } from 'antd'\nimport { addProduct } from '../actions/actionCreators'\n\nconst Product = ({ ...props }) => {\n  const { product, addProduct } = props\n  return (\n    <div style={{ background: '#ECECEC', padding: '30px' }}>\n      <Card title={product.name} bordered={false}>\n        <p>\n          {product.price.toLocaleString(undefined, {\n            style: 'currency',\n            currency: 'NZD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 2\n          })}\n        </p>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            addProduct(product)\n          }}\n        >\n          Add to cart\n        </Button>\n      </Card>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, props) => {\n  return {}\n}\n\nconst mapDispatchToProps = {\n  addProduct\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Product)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Layout, Icon, Row, Col } from 'antd'\nimport Product from '../components/Product'\nimport { getProducts } from '../actions/actionCreators'\nconst { Header, Content } = Layout\n\nconst ProductsContainer = ({ ...props }) => {\n  const { products, toggleCart, getProducts } = props\n  useEffect(() => {\n    getProducts()\n  }, [])\n\n  return (\n    <Layout>\n      <Header style={{ background: '#fff', padding: 0 }}>\n        <Icon className=\"trigger\" type=\"shopping-cart\" onClick={toggleCart} />\n      </Header>\n\n      <Content\n        style={{\n          margin: '24px 16px',\n          padding: 24,\n          background: '#fff',\n          minHeight: 280\n        }}\n      >\n        <Row type=\"flex\">\n          {products &&\n            products.map((product, key) => (\n              <Col key={key} span={6}>\n                <Product product={product} />\n              </Col>\n            ))}\n        </Row>\n      </Content>\n    </Layout>\n  )\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    products: state.productReducer.products\n  }\n}\n\nconst mapDispatchToProps = {\n  getProducts\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProductsContainer)\n","import React, { useState } from 'react'\nimport { Layout } from 'antd';\nimport './App.css'\nimport CartContainer from './containers/CartContainer'\nimport ProductsContainer from './containers/ProductsContainer'\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(false)\n  const toggleCart = () => {\n    setCollapsed(!collapsed)\n  }\n  const onClose = () =>{\n    setCollapsed(false)\n  }\n  return (\n    <Layout className=\"App\">\n      <CartContainer collapsed={collapsed} onClose={onClose} />\n      <ProductsContainer collapsed={collapsed} toggleCart={toggleCart} />\n    </Layout>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios'\nconst products = [\n  {\n    name: 'Sledgehammer',\n    price: 125.75\n  },\n  {\n    name: 'Axe',\n    price: 190.5\n  },\n  {\n    name: 'Bandsaw',\n    price: 562.13\n  },\n  {\n    name: 'Chisel',\n    price: 12.9\n  },\n  {\n    name: 'Hacksaw',\n    price: 18.45\n  }\n]\n\nexport const getProducts = () => {\n  return new Promise((resolve, reject) => {\n    axios({\n      method: 'get',\n      url: 'http://www.mocky.io/v2/5d9448492f000058008ff605',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status === 400 || res.status === 403) {\n          reject(res)\n        }\n\n        resolve(products)\n      })\n      .catch(err => {\n        reject(err.response)\n      })\n  })\n}\n","import { message } from 'antd';\nimport { GetProducts, GetProductsSuccess } from '../actions/actionTypes'\nimport { call, put, takeEvery } from 'redux-saga/effects'\nimport { getProducts } from '../services'\n\nfunction* getProductsSaga() {\n  try {\n    message.loading('loading products...',0)\n    const products = yield call(getProducts)\n    message.destroy()\n    yield put({ type: GetProductsSuccess, payload: products })\n  } catch (error) {\n    message.error('Get products failed')\n  }\n}\n\nfunction* productSaga() {\n  yield takeEvery(GetProducts, getProductsSaga)\n}\n\nexport default productSaga\n","import { fork, all } from 'redux-saga/effects'\nimport productSaga from './productSaga'\n\nexport default function* rootSaga() {\n    yield all([\n        fork(productSaga)\n    ])\n}","import { AddProduct, RemoveProduct } from '../actions/actionTypes'\nconst initialState = { carts: [] }\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AddProduct:\n      const addedProduct = state.carts.find(\n        item => item.product.name === action.payload.name\n      )\n      //if product is exist in shopping cart, quantity plus one\n      if (addedProduct) {\n        addedProduct.quantity += 1\n        return {\n          ...state,\n          carts: state.carts.filter(item =>\n            item.product.name === addedProduct.product.name\n              ? { ...item, quantity: addedProduct }\n              : item\n          )\n        }\n        //otherwise add product to shopping cart\n      } else {\n        return {\n          ...state,\n          carts: [...state.carts, { product: action.payload, quantity: 1 }]\n        }\n      }\n\n    case RemoveProduct:\n      if (action.payload.quantity === 1) {\n        return {\n          ...state,\n          carts: [\n            ...state.carts.filter(\n              item => item.product.name !== action.payload.product.name\n            )\n          ]\n        }\n      } else {\n        action.payload.quantity -= 1\n        return {\n          ...state,\n          carts: state.carts.filter(item =>\n            item.product.name === action.payload.product.name\n              ? { ...item, quantity: action.payload.quantity }\n              : item\n          )\n        }\n      }\n\n\n    default:\n      return state\n  }\n}\n\nexport default cartReducer\n","import { GetProductsSuccess } from '../actions/actionTypes'\nconst initialState = { products: [] }\nconst productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GetProductsSuccess:\n      return { ...state, products: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default productReducer\n","import { combineReducers } from 'redux'\nimport storage from 'redux-persist/lib/storage'\nimport { persistReducer } from 'redux-persist'\nimport cartReducer from './cartReducer'\nimport productReducer from './productReducer'\n\nconst cartPersistConfig = {\n  key: 'cart',\n  storage\n}\n\nconst allReducers = combineReducers({\n  productReducer: productReducer,\n  cartReducer: persistReducer(cartPersistConfig, cartReducer)\n})\n\nexport default allReducers\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { persistStore } from 'redux-persist'\nimport rootSaga from './sagas'\nimport allReducers from './reducers'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nfunction configureStore() {\n  const store = createStore(\n    allReducers,\n    composeEnhancers(applyMiddleware(sagaMiddleware))\n  )\n\n  sagaMiddleware.run(rootSaga)\n\n  let persistor = persistStore(store)\n\n  return { persistor, store }\n}\n\nexport default configureStore","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './store'\n\n\nconst { store, persistor } = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}